{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "NOTES REST API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3333/api/v1",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "user_auth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter the token with the `Bearer: ` prefix, e.g. 'Bearer abcde12345'."
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para criar um novo usuário.",
        "parameters": [
          {
            "name": "createUser",
            "in": "body",
            "description": "Dados do novo usuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "409": {
            "description": "Usuário já existe.",
            "schema": {
              "$ref": "#/definitions/Conflict"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/auth/refresh-token": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "refresh_token",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/auth/verify-user": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/me": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/find": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "field",
            "in": "query",
            "type": "string"
          },
          {
            "name": "value",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/active": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter todos os usuários ativos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listar usuários ativos no sistema.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          }
        }
      }
    },
    "/users/inactive": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/users/change-password": {
      "patch": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "oldPassword": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/edit/profile": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "role": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    },
    "/users/{id}": {
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/my-notes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/search/request": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "field",
            "in": "query",
            "type": "string"
          },
          {
            "name": "value",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/pending": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/completed": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/overdue": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/notes/edit/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "subject": {
                  "example": "any"
                },
                "content": {
                  "example": "any"
                },
                "start_date": {
                  "example": "any"
                },
                "due_date": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {}
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "ab476fh5gd65vc9"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "123456789"
        },
        "role": {
          "type": "string",
          "example": "admin"
        },
        "status": {
          "type": "string",
          "example": "active"
        },
        "profile_picture": {
          "type": "string",
          "example": "https://example.com/profile-picture.jpg"
        },
        "email_verified_at": {
          "type": "string",
          "example": "2022-01-01T00:00:00.000Z"
        },
        "password_reset_token": {
          "type": "string",
          "example": "token=123456789"
        },
        "remember_token": {
          "type": "string",
          "example": "token=123456789"
        },
        "provider_id": {},
        "provider_name": {},
        "lastLoginDate": {
          "type": "string",
          "example": "2022-11-01T00:00:00.000Z"
        },
        "currentLoginDate": {
          "type": "string",
          "example": "2022-12-12T00:00:00.000Z"
        },
        "created_at": {
          "type": "string",
          "example": "2022-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2022-11-12T00:00:00.000Z"
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "ab476fh5gd65vc9"
        },
        "title": {
          "type": "string",
          "example": "Note title"
        },
        "subject": {
          "type": "string",
          "example": "Note subject"
        },
        "content": {
          "type": "string",
          "example": "Note content"
        },
        "start_date": {
          "type": "string",
          "example": "2022-10-01T00:00:00.000Z"
        },
        "due_date": {
          "type": "string",
          "example": "2022-10-15T00:00:00.000Z"
        },
        "assignee": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "ab476fh5gd65vc9"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            }
          }
        },
        "created_at": {
          "type": "string",
          "example": "2022-01-01T00:00:00.000Z"
        },
        "updated_at": {
          "type": "string",
          "example": "2022-11-12T00:00:00.000Z"
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Usuário criado com sucesso!"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "ab476fh5gd65vc9"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "password": {
              "type": "string",
              "example": "123456789"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            },
            "email_verified_at": {},
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        },
        "access_token": {
          "type": "string",
          "example": "token=123456789"
        }
      }
    },
    "newUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "123456789"
        }
      }
    },
    "OK": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Requisição realizada com sucesso!"
        }
      }
    },
    "Conflict": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 409
        },
        "message": {
          "type": "string",
          "example": "Já existe um usuário com este e-mail!"
        }
      }
    },
    "Unauthorized": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 401
        },
        "message": {
          "type": "string",
          "example": "Acesso negado. Você não está autenticado!"
        }
      }
    },
    "Forbidden": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 403
        },
        "message": {
          "type": "string",
          "example": "Acesso negado. Você não tem permissão para acessar este recurso!"
        }
      }
    },
    "BadRequest": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "Requisição inválida!"
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Erro interno do servidor!"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    }
  }
}